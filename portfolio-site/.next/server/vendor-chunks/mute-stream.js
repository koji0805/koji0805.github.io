/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mute-stream";
exports.ids = ["vendor-chunks/mute-stream"];
exports.modules = {

/***/ "(ssr)/./node_modules/mute-stream/mute.js":
/*!******************************************!*\
  !*** ./node_modules/mute-stream/mute.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Stream = __webpack_require__(/*! stream */ \"stream\")\n\nmodule.exports = MuteStream\n\n// var out = new MuteStream(process.stdout)\n// argument auto-pipes\nfunction MuteStream (opts) {\n  Stream.apply(this)\n  opts = opts || {}\n  this.writable = this.readable = true\n  this.muted = false\n  this.on('pipe', this._onpipe)\n  this.replace = opts.replace\n\n  // For readline-type situations\n  // This much at the start of a line being redrawn after a ctrl char\n  // is seen (such as backspace) won't be redrawn as the replacement\n  this._prompt = opts.prompt || null\n  this._hadControl = false\n}\n\nMuteStream.prototype = Object.create(Stream.prototype)\n\nObject.defineProperty(MuteStream.prototype, 'constructor', {\n  value: MuteStream,\n  enumerable: false\n})\n\nMuteStream.prototype.mute = function () {\n  this.muted = true\n}\n\nMuteStream.prototype.unmute = function () {\n  this.muted = false\n}\n\nObject.defineProperty(MuteStream.prototype, '_onpipe', {\n  value: onPipe,\n  enumerable: false,\n  writable: true,\n  configurable: true\n})\n\nfunction onPipe (src) {\n  this._src = src\n}\n\nObject.defineProperty(MuteStream.prototype, 'isTTY', {\n  get: getIsTTY,\n  set: setIsTTY,\n  enumerable: true,\n  configurable: true\n})\n\nfunction getIsTTY () {\n  return( (this._dest) ? this._dest.isTTY\n        : (this._src) ? this._src.isTTY\n        : false\n        )\n}\n\n// basically just get replace the getter/setter with a regular value\nfunction setIsTTY (isTTY) {\n  Object.defineProperty(this, 'isTTY', {\n    value: isTTY,\n    enumerable: true,\n    writable: true,\n    configurable: true\n  })\n}\n\nObject.defineProperty(MuteStream.prototype, 'rows', {\n  get: function () {\n    return( this._dest ? this._dest.rows\n          : this._src ? this._src.rows\n          : undefined )\n  }, enumerable: true, configurable: true })\n\nObject.defineProperty(MuteStream.prototype, 'columns', {\n  get: function () {\n    return( this._dest ? this._dest.columns\n          : this._src ? this._src.columns\n          : undefined )\n  }, enumerable: true, configurable: true })\n\n\nMuteStream.prototype.pipe = function (dest, options) {\n  this._dest = dest\n  return Stream.prototype.pipe.call(this, dest, options)\n}\n\nMuteStream.prototype.pause = function () {\n  if (this._src) return this._src.pause()\n}\n\nMuteStream.prototype.resume = function () {\n  if (this._src) return this._src.resume()\n}\n\nMuteStream.prototype.write = function (c) {\n  if (this.muted) {\n    if (!this.replace) return true\n    if (c.match(/^\\u001b/)) {\n      if(c.indexOf(this._prompt) === 0) {\n        c = c.substr(this._prompt.length);\n        c = c.replace(/./g, this.replace);\n        c = this._prompt + c;\n      }\n      this._hadControl = true\n      return this.emit('data', c)\n    } else {\n      if (this._prompt && this._hadControl &&\n          c.indexOf(this._prompt) === 0) {\n        this._hadControl = false\n        this.emit('data', this._prompt)\n        c = c.substr(this._prompt.length)\n      }\n      c = c.toString().replace(/./g, this.replace)\n    }\n  }\n  this.emit('data', c)\n}\n\nMuteStream.prototype.end = function (c) {\n  if (this.muted) {\n    if (c && this.replace) {\n      c = c.toString().replace(/./g, this.replace)\n    } else {\n      c = null\n    }\n  }\n  if (c) this.emit('data', c)\n  this.emit('end')\n}\n\nfunction proxy (fn) { return function () {\n  var d = this._dest\n  var s = this._src\n  if (d && d[fn]) d[fn].apply(d, arguments)\n  if (s && s[fn]) s[fn].apply(s, arguments)\n}}\n\nMuteStream.prototype.destroy = proxy('destroy')\nMuteStream.prototype.destroySoon = proxy('destroySoon')\nMuteStream.prototype.close = proxy('close')\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXV0ZS1zdHJlYW0vbXV0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG1CQUFPLENBQUMsc0JBQVE7O0FBRTdCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsd0NBQXdDOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyx3Q0FBd0M7OztBQUczQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLXNpdGUvLi9ub2RlX21vZHVsZXMvbXV0ZS1zdHJlYW0vbXV0ZS5qcz9jYjVmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBTdHJlYW0gPSByZXF1aXJlKCdzdHJlYW0nKVxuXG5tb2R1bGUuZXhwb3J0cyA9IE11dGVTdHJlYW1cblxuLy8gdmFyIG91dCA9IG5ldyBNdXRlU3RyZWFtKHByb2Nlc3Muc3Rkb3V0KVxuLy8gYXJndW1lbnQgYXV0by1waXBlc1xuZnVuY3Rpb24gTXV0ZVN0cmVhbSAob3B0cykge1xuICBTdHJlYW0uYXBwbHkodGhpcylcbiAgb3B0cyA9IG9wdHMgfHwge31cbiAgdGhpcy53cml0YWJsZSA9IHRoaXMucmVhZGFibGUgPSB0cnVlXG4gIHRoaXMubXV0ZWQgPSBmYWxzZVxuICB0aGlzLm9uKCdwaXBlJywgdGhpcy5fb25waXBlKVxuICB0aGlzLnJlcGxhY2UgPSBvcHRzLnJlcGxhY2VcblxuICAvLyBGb3IgcmVhZGxpbmUtdHlwZSBzaXR1YXRpb25zXG4gIC8vIFRoaXMgbXVjaCBhdCB0aGUgc3RhcnQgb2YgYSBsaW5lIGJlaW5nIHJlZHJhd24gYWZ0ZXIgYSBjdHJsIGNoYXJcbiAgLy8gaXMgc2VlbiAoc3VjaCBhcyBiYWNrc3BhY2UpIHdvbid0IGJlIHJlZHJhd24gYXMgdGhlIHJlcGxhY2VtZW50XG4gIHRoaXMuX3Byb21wdCA9IG9wdHMucHJvbXB0IHx8IG51bGxcbiAgdGhpcy5faGFkQ29udHJvbCA9IGZhbHNlXG59XG5cbk11dGVTdHJlYW0ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTdHJlYW0ucHJvdG90eXBlKVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoTXV0ZVN0cmVhbS5wcm90b3R5cGUsICdjb25zdHJ1Y3RvcicsIHtcbiAgdmFsdWU6IE11dGVTdHJlYW0sXG4gIGVudW1lcmFibGU6IGZhbHNlXG59KVxuXG5NdXRlU3RyZWFtLnByb3RvdHlwZS5tdXRlID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLm11dGVkID0gdHJ1ZVxufVxuXG5NdXRlU3RyZWFtLnByb3RvdHlwZS51bm11dGUgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMubXV0ZWQgPSBmYWxzZVxufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoTXV0ZVN0cmVhbS5wcm90b3R5cGUsICdfb25waXBlJywge1xuICB2YWx1ZTogb25QaXBlLFxuICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgd3JpdGFibGU6IHRydWUsXG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZVxufSlcblxuZnVuY3Rpb24gb25QaXBlIChzcmMpIHtcbiAgdGhpcy5fc3JjID0gc3JjXG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShNdXRlU3RyZWFtLnByb3RvdHlwZSwgJ2lzVFRZJywge1xuICBnZXQ6IGdldElzVFRZLFxuICBzZXQ6IHNldElzVFRZLFxuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBjb25maWd1cmFibGU6IHRydWVcbn0pXG5cbmZ1bmN0aW9uIGdldElzVFRZICgpIHtcbiAgcmV0dXJuKCAodGhpcy5fZGVzdCkgPyB0aGlzLl9kZXN0LmlzVFRZXG4gICAgICAgIDogKHRoaXMuX3NyYykgPyB0aGlzLl9zcmMuaXNUVFlcbiAgICAgICAgOiBmYWxzZVxuICAgICAgICApXG59XG5cbi8vIGJhc2ljYWxseSBqdXN0IGdldCByZXBsYWNlIHRoZSBnZXR0ZXIvc2V0dGVyIHdpdGggYSByZWd1bGFyIHZhbHVlXG5mdW5jdGlvbiBzZXRJc1RUWSAoaXNUVFkpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdpc1RUWScsIHtcbiAgICB2YWx1ZTogaXNUVFksXG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWVcbiAgfSlcbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KE11dGVTdHJlYW0ucHJvdG90eXBlLCAncm93cycsIHtcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuKCB0aGlzLl9kZXN0ID8gdGhpcy5fZGVzdC5yb3dzXG4gICAgICAgICAgOiB0aGlzLl9zcmMgPyB0aGlzLl9zcmMucm93c1xuICAgICAgICAgIDogdW5kZWZpbmVkIClcbiAgfSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShNdXRlU3RyZWFtLnByb3RvdHlwZSwgJ2NvbHVtbnMnLCB7XG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiggdGhpcy5fZGVzdCA/IHRoaXMuX2Rlc3QuY29sdW1uc1xuICAgICAgICAgIDogdGhpcy5fc3JjID8gdGhpcy5fc3JjLmNvbHVtbnNcbiAgICAgICAgICA6IHVuZGVmaW5lZCApXG4gIH0sIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9KVxuXG5cbk11dGVTdHJlYW0ucHJvdG90eXBlLnBpcGUgPSBmdW5jdGlvbiAoZGVzdCwgb3B0aW9ucykge1xuICB0aGlzLl9kZXN0ID0gZGVzdFxuICByZXR1cm4gU3RyZWFtLnByb3RvdHlwZS5waXBlLmNhbGwodGhpcywgZGVzdCwgb3B0aW9ucylcbn1cblxuTXV0ZVN0cmVhbS5wcm90b3R5cGUucGF1c2UgPSBmdW5jdGlvbiAoKSB7XG4gIGlmICh0aGlzLl9zcmMpIHJldHVybiB0aGlzLl9zcmMucGF1c2UoKVxufVxuXG5NdXRlU3RyZWFtLnByb3RvdHlwZS5yZXN1bWUgPSBmdW5jdGlvbiAoKSB7XG4gIGlmICh0aGlzLl9zcmMpIHJldHVybiB0aGlzLl9zcmMucmVzdW1lKClcbn1cblxuTXV0ZVN0cmVhbS5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiAoYykge1xuICBpZiAodGhpcy5tdXRlZCkge1xuICAgIGlmICghdGhpcy5yZXBsYWNlKSByZXR1cm4gdHJ1ZVxuICAgIGlmIChjLm1hdGNoKC9eXFx1MDAxYi8pKSB7XG4gICAgICBpZihjLmluZGV4T2YodGhpcy5fcHJvbXB0KSA9PT0gMCkge1xuICAgICAgICBjID0gYy5zdWJzdHIodGhpcy5fcHJvbXB0Lmxlbmd0aCk7XG4gICAgICAgIGMgPSBjLnJlcGxhY2UoLy4vZywgdGhpcy5yZXBsYWNlKTtcbiAgICAgICAgYyA9IHRoaXMuX3Byb21wdCArIGM7XG4gICAgICB9XG4gICAgICB0aGlzLl9oYWRDb250cm9sID0gdHJ1ZVxuICAgICAgcmV0dXJuIHRoaXMuZW1pdCgnZGF0YScsIGMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0aGlzLl9wcm9tcHQgJiYgdGhpcy5faGFkQ29udHJvbCAmJlxuICAgICAgICAgIGMuaW5kZXhPZih0aGlzLl9wcm9tcHQpID09PSAwKSB7XG4gICAgICAgIHRoaXMuX2hhZENvbnRyb2wgPSBmYWxzZVxuICAgICAgICB0aGlzLmVtaXQoJ2RhdGEnLCB0aGlzLl9wcm9tcHQpXG4gICAgICAgIGMgPSBjLnN1YnN0cih0aGlzLl9wcm9tcHQubGVuZ3RoKVxuICAgICAgfVxuICAgICAgYyA9IGMudG9TdHJpbmcoKS5yZXBsYWNlKC8uL2csIHRoaXMucmVwbGFjZSlcbiAgICB9XG4gIH1cbiAgdGhpcy5lbWl0KCdkYXRhJywgYylcbn1cblxuTXV0ZVN0cmVhbS5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24gKGMpIHtcbiAgaWYgKHRoaXMubXV0ZWQpIHtcbiAgICBpZiAoYyAmJiB0aGlzLnJlcGxhY2UpIHtcbiAgICAgIGMgPSBjLnRvU3RyaW5nKCkucmVwbGFjZSgvLi9nLCB0aGlzLnJlcGxhY2UpXG4gICAgfSBlbHNlIHtcbiAgICAgIGMgPSBudWxsXG4gICAgfVxuICB9XG4gIGlmIChjKSB0aGlzLmVtaXQoJ2RhdGEnLCBjKVxuICB0aGlzLmVtaXQoJ2VuZCcpXG59XG5cbmZ1bmN0aW9uIHByb3h5IChmbikgeyByZXR1cm4gZnVuY3Rpb24gKCkge1xuICB2YXIgZCA9IHRoaXMuX2Rlc3RcbiAgdmFyIHMgPSB0aGlzLl9zcmNcbiAgaWYgKGQgJiYgZFtmbl0pIGRbZm5dLmFwcGx5KGQsIGFyZ3VtZW50cylcbiAgaWYgKHMgJiYgc1tmbl0pIHNbZm5dLmFwcGx5KHMsIGFyZ3VtZW50cylcbn19XG5cbk11dGVTdHJlYW0ucHJvdG90eXBlLmRlc3Ryb3kgPSBwcm94eSgnZGVzdHJveScpXG5NdXRlU3RyZWFtLnByb3RvdHlwZS5kZXN0cm95U29vbiA9IHByb3h5KCdkZXN0cm95U29vbicpXG5NdXRlU3RyZWFtLnByb3RvdHlwZS5jbG9zZSA9IHByb3h5KCdjbG9zZScpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mute-stream/mute.js\n");

/***/ })

};
;